#!/usr/sbin/nft -f

flush ruleset

# internal vlan
define common = {{ common_interface }}
# external vlan
define public = {{ public_interface }}
# cross cable vlan between the firewall, for conntrackd
define interco_fw = {{ interco_fw_interface }}

table firewall {

    set webproxy_servers {
        type ipv4_addr;
        elements = { 172.24.1.61 , 172.24.1.60 }
    }

    set dns_servers {
        type ipv4_addr;
        elements = { 172.24.1.61, 172.24.1.60 }
    }

    # TODO 
    # bastion, aide, backups 
    set ssh_outgoing_servers {
        type ipv4_addr;
        elements = { 172.24.1.53 }
    }

    # TODO 
    set munin_servers {
        type ipv4_addr;
        elements = { 1.2.3.4 , 1.2.3.5 }
    }

    # in order to test the firewall, all rules are open
    # except for this set.
    # then one by one, we will add servers here until we have to reverse
    #
    set filtered_servers {
        type ipv4_addr;
        elements = { 172.24.1.53,  }
    }

    # list of authorized NTP servers
    # ntp1.osci.io / ntp2.osci.io
    set external_ntp_servers {
        type ipv4_addr;
        elements = { 8.43.85.225, 8.43.85.226 }
    }

    # https://wiki.nftables.org/wiki-nftables/index.php/Performing_Network_Address_Translation_(NAT)
    chain prerouting {
        type nat hook prerouting priority 0;
    }

    chain postrouting {
        type nat hook postrouting priority 100;
        # TODO do not hardcode 
        ip saddr 172.24.1.0/24 oif $public snat {{ outgoing_ip }}
    }

    chain incoming {
        type filter hook input priority 0; policy drop;

        ct state established,related accept

        iifname lo accept

        # for conntrackd
        iifname $interco_fw accept

        # for nftables
        # TODO do not hardcode
        iifname $common meta l4proto vrrp ip daddr 224.0.0.18 accept

        icmp type echo-request accept
        tcp dport ssh accept
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        
        ct state established,related accept
        ct state invalid drop

        iif ne $common oif ne $public log prefix "Forward routing DROP" drop

        ip saddr @filtered_servers jump filtered

        accept
    }

    chain filtered {
        ip saddr @munin_servers        tcp dport 4949 accept
        ip saddr @ssh_outgoing_servers tcp dport ssh accept
        ip saddr @dns_servers          tcp dport 53 accept
        ip saddr @dns_servers          udp dport 53 accept
        ip saddr @webproxy_servers     tcp dport {80, 443} accept
        ip addr  @external_ntp_servers udp dport 123 accept
        # drop ntp to others server to not pollute logs
        udp dport 123 drop
        log prefix "Forward DROP " drop
    }
}
